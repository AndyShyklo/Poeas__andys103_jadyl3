jadyL & andyS -- 2025-04-30 11:30
  - Chat with Mr. Dillon about scheduling algorithm:
    - Make algorithm to schedule students first
    - Add seating for course limitations
    - Row of Student CSV data contains OSIS and course reqs
    - Row of Classes CSV data contains Course Code, Section #, Period, Seats, Room, Days
    - Elective rankings to be taken into account later
    - Use Recursion and possibly Stack object
    - May need to be rewritten in JS, if time allows (Google App Script)
    - Current uses 2D list, but can use 3D to read between student data in order to...
    - ... resolve impossible conflicts in schedules by shifting courses around through students <--- Goal

jadyL -- 2025-04-30 23:25
  - Made access methods for reading student and course CSV files
  - Created way to view impossible classes and existing course periods
  - Made new availability methods per student/class
  - Created sample data for student requests

andyS -- 2025-05-01 1:34
  - Started assigning courses with simple, most selective classes-algorithm
  - Made course comparing function with dictionaries

jadyL -- 2025-05-01 23:33
  - Remade possible schedule algorithm and allows classes to be shifted upwards
  - Made code work for double period compatability (10 --> 0)

jadyL -- 2025-05-01 11:40
  - add potential for partial schedules.

jadyL -- 2025-05-01 11:47
  - trying to translate string schedule

andyS -- 2025-05-01 11:48
  - fixed schedule proto-type, backup scheduler

jadyL -- 2025-05-04 15:22
  - the ghost of a better programmer possessed me in a Tour les Jours and I made my code better.
  - I got rid of the id put into the availability list
  - I added the student id to the recursion functions.
  - task 2 should be done

andyS -- 2025-05-05 1:34
  - fixed recursive function to return where a schedule conflict occured, and the status of the schedule
  - made function to put the schedule together in an accessable format
  - made 1D array of string with each student-class per row, if scheduled
  - made 2D array of schedules per student schedule, if scheduled or if not
  - allowed methods for specific users, not just general (overall, fixed formatting and added info statements)

jadyL -- 2025-05-07 23:59
  - schedule string -> list of integers and doubles
  - added math module
  - added master schedule and student request

andyS -- 2025-05-08 5:17
  - made selection sorter (provisions for seating)
  - polished up schedule lister
  - fixed major errors in both recursive sequencing and master student requests (527 and 799)
  - design doc changes:
    - removed extra database organization and added math module

jadyL -- 2025-05-08 11:22
  - cleanup no longer used functions
  - changed NUM_OF_REQUESTED_CLASSES to 15

jadyL -- 2025-05-09 00:25
  - stash avail wip code

andyS -- 2025-05-12 12:37
  - edited return list of availability to sort by length
  - fixed recursive function to return proper invalid classes
  - fixed master schedule for remaining capacity

jadyL -- 2025-05-12 11:30
  - add class code to front of availability sublists.
  - example of current availability sublist: (ZLUN, (1, 4, 0), (2, 5, 0), (3, 6, 0)...)
  - change how sorting the list works

andyS -- 2025-05-14 2:12
  - created new, separate testing recursive function
  - added a seemingly working solution for scheduling half periods
  - needs work on returning the actual list of classes scheduled

andyS -- 2025-05-15 1:44
  - createScheduleS and RS work well with schedule for use with doubles and halves
  - fixed error with duplicate classes
  - current error with course code ZQPD1 having invalid cycle 00110

jadyL -- 2025-05-19 23:30
  - write doubles into availability
  - wrote cycleToNumber to reduce redundant code
  - delete old recursive code

jadyL -- 2025-05-20 11:46
  - fix the broken code of yesterday

jadyL -- 2025-05-20 11:46
  - found a better way of searching for 0.2
  - write a special case for bio lab, chem lab, and physics lab
  - auto format document

jadyL -- 2025-05-20 11:46
  - fix the broken code of yesterday

TODO:
  - rewrite returnListofAvailability function to support singleton and class availability priority.
  - make a half periods x.1 and make b half periods x.2
  - replace NUM_OF_REQUESTED_CLASSES
  - fix translate function(s?) to account for change in schedule format
  - low priority: change periods out of strings
